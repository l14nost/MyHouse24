package lab.space.my_house_24.service.impl;

import lab.space.my_house_24.entity.*;
import lab.space.my_house_24.enums.ArticleType;
import lab.space.my_house_24.enums.BankBookStatus;
import lab.space.my_house_24.enums.BillStatus;
import lab.space.my_house_24.model.bankBook.*;
import lab.space.my_house_24.repository.ApartmentRepository;
import lab.space.my_house_24.repository.BankBookRepository;
import lab.space.my_house_24.repository.BillRepository;
import lab.space.my_house_24.repository.CashBoxRepository;
import lab.space.my_house_24.service.ExcelService;
import lab.space.my_house_24.service.StatisticService;
import lab.space.my_house_24.specification.BankBookSpecification;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.context.MessageSource;
import org.springframework.core.io.InputStreamResource;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.data.jpa.domain.Specification;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class BankBookServiceImplTest {

    @Mock
    private BankBookRepository bankBookRepository;

    @Mock
    private ApartmentRepository apartmentRepository;

    @Mock
    private BankBookSpecification bankBookSpecification;

    @Mock
    private BillRepository billRepository;

    @Mock
    private CashBoxRepository cashBoxRepository;

    @Mock
    private MessageSource message;

    @Mock
    private StatisticService statisticService;

    @Mock
    private ExcelService excelService;

    @InjectMocks
    private BankBookServiceImpl bankBookService;

    @Test
    void getBankBookById() {
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(BankBook.builder().build()));
        assertEquals(BankBook.builder().build(), bankBookService.getBankBookById(1L));
    }

    @Test
    void getBankBookResponseById() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .build();
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));
        assertEquals(1L, bankBookService.getBankBookResponseById(1L).id());
        verify(bankBookRepository, times(1)).findById(anyLong());
    }

    @Test
    void findByNumber() {
        when(bankBookRepository.findBankBookByNumber(anyString())).thenReturn(Optional.of(BankBook.builder().build()));
        assertEquals(Optional.of(BankBook.builder().build()), bankBookService.findByNumber("Test"));
    }

    @Test
    void bankBookListForTable() {
        List<BankBook> bankBooks = List.of(
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build()
        );
        when(bankBookRepository.findAllByApartmentIsNullAndBankBookStatus(BankBookStatus.ACTIVE)).thenReturn(bankBooks);
        List<BankBookResponseForTable> bankBookResponses = bankBookService.bankBookListForTable();
        verify(bankBookRepository, times(1)).findAllByApartmentIsNullAndBankBookStatus(BankBookStatus.ACTIVE);
        assertEquals(4, bankBookResponses.size());
        assertEquals(BankBookResponseForTable.class, bankBookResponses.iterator().next().getClass());
    }

    @Test
    void getBankBookListForCashBoxByUserId() {
        Page<BankBook> bankBooks = new PageImpl<>(List.of(
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build()
        ));
        when(bankBookRepository.findAll((Specification<BankBook>) any(), any(PageRequest.class))).thenReturn(bankBooks);
        Page<BankBookResponseForCashBox> bankBookResponses = bankBookService.getBankBookListForCashBoxByUserId(1,1L,"Test");
        verify(bankBookRepository, times(1)).findAll((Specification<BankBook>) any(), any(PageRequest.class));
        assertEquals(4, bankBookResponses.getTotalElements());
        assertEquals(BankBookResponseForCashBox.class, bankBookResponses.iterator().next().getClass());
    }

    @Test
    void getAllBankBookResponse() {
        Page<BankBook> bankBooks = new PageImpl<>(
                List.of(
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build()
                )
        );
        when(bankBookRepository.findAll((Specification<BankBook>) any(), any(PageRequest.class))).thenReturn(bankBooks);
        Page<BankBookResponse> bankBookResponses = bankBookService.getAllBankBookResponse(BankBookRequest.builder().pageIndex(1).build());
        verify(bankBookRepository, times(1)).findAll((Specification<BankBook>) any(), any(PageRequest.class));
        assertEquals(4, bankBookResponses.getTotalElements());
        assertEquals(BankBookResponse.class, bankBookResponses.iterator().next().getClass());
    }

    @Test
    void getAllBankBookIsActive() {
        List<BankBook> bankBooks = List.of(
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build(),
                BankBook.builder()
                        .id(1L)
                        .number("01234-56789")
                        .bankBookStatus(BankBookStatus.ACTIVE)
                        .totalPrice(BigDecimal.ZERO)
                        .apartment(Apartment.builder()
                                .id(1L)
                                .number(1234)
                                .house(House.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .section(Section.builder()
                                        .id(1L)
                                        .name("Test")
                                        .build())
                                .user(User.builder()
                                        .id(1L)
                                        .firstname("Test")
                                        .surname("Test")
                                        .lastname("Test")
                                        .number("0123456789")
                                        .build())
                                .build())
                        .build()
        );
        when(bankBookRepository.findAll((Specification<BankBook>) any())).thenReturn(bankBooks);
        List<BankBook> bankBookResponses = bankBookService.getAllBankBookIsActive();
        verify(bankBookRepository, times(1)).findAll((Specification<BankBook>) any());
        assertEquals(4, bankBookResponses.size());
        assertEquals(BankBook.class, bankBookResponses.iterator().next().getClass());
    }

    @Test
    void getAllBalanceStatus() {
        assertEquals(2, bankBookService.getAllBalanceStatus().size());
    }

    @Test
    void getAllBankBookStatus() {
        assertEquals(2, bankBookService.getAllBankBookStatus().size());
    }

    @Test
    void updateBankBookByRequest() {
        BankBookUpdateRequest request = BankBookUpdateRequest.builder()
                .id(1L)
                .status(BankBookStatus.ACTIVE)
                .apartmentId(1L)
                .number("00000-00001")
                .build();

        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .build();
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));
        when(apartmentRepository.findById(anyLong())).thenReturn(Optional.of(Apartment.builder().build()));

        bankBookService.updateBankBookByRequest(request);
        verify(bankBookRepository, times(1)).findById(anyLong());
        verify(apartmentRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void saveBankBookByRequest() {
        BankBookSaveRequest request = BankBookSaveRequest.builder()
                .status(BankBookStatus.ACTIVE)
                .apartmentId(1L)
                .build();

        when(apartmentRepository.findById(anyLong())).thenReturn(Optional.of(Apartment.builder().build()));
        when(bankBookRepository.findAll(Sort.by(Sort.Direction.DESC, "id"))).thenReturn(List.of());

        bankBookService.saveBankBookByRequest(request);
        verify(apartmentRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void saveBankBookByRequestGenerateNumber() {
        BankBook bankBook = BankBook.builder().number("00000-99999").build();

        BankBookSaveRequest request = BankBookSaveRequest.builder()
                .status(BankBookStatus.ACTIVE)
                .apartmentId(1L)
                .build();

        when(apartmentRepository.findById(anyLong())).thenReturn(Optional.of(Apartment.builder().build()));
        when(bankBookRepository.findAll(Sort.by(Sort.Direction.DESC, "id"))).thenReturn(List.of(bankBook));

        bankBookService.saveBankBookByRequest(request);
        verify(apartmentRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void saveBankBook() {
        bankBookService.saveBankBook(BankBook.builder().build());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    public void testGetExcel() throws IOException {
        Page<BankBook> bankBooks = new PageImpl<>(
                List.of(
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build(),
                        BankBook.builder()
                                .id(1L)
                                .number("01234-56789")
                                .bankBookStatus(BankBookStatus.ACTIVE)
                                .totalPrice(BigDecimal.ZERO)
                                .apartment(Apartment.builder()
                                        .id(1L)
                                        .number(1234)
                                        .house(House.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .section(Section.builder()
                                                .id(1L)
                                                .name("Test")
                                                .build())
                                        .user(User.builder()
                                                .id(1L)
                                                .firstname("Test")
                                                .surname("Test")
                                                .lastname("Test")
                                                .number("0123456789")
                                                .build())
                                        .build())
                                .build()
                )
        );
        when(bankBookRepository.findAll((Specification<BankBook>) any(), any(PageRequest.class))).thenReturn(bankBooks);
        BankBookRequest request = BankBookRequest.builder().pageIndex(1).build();
        InputStreamResource excel = bankBookService.getExcel(request);
        assertNotNull(excel);
    }

    @Test
    public void testGetExcelWithIOException() throws Exception {
        Workbook workbook = mock(Workbook.class);

        ByteArrayOutputStream out = mock(ByteArrayOutputStream.class);
        out.close();
        doThrow(new IOException("Test IO Exception")).when(workbook);
        BankBookRequest request = BankBookRequest.builder().pageIndex(1).build();
        assertThrows(RuntimeException.class, () -> bankBookService.getExcel(request));
    }

    @Test
    void calculateBankBook() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ONE)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .status(BillStatus.UNPAID)
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ONE)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, BigDecimal.ONE, bankBook.getBill().get(0));
        assertEquals("11", bankBook.getTotalPrice().toString());
        verify(cashBoxRepository, times(1)).save(any());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBook() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ONE)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .status(BillStatus.UNPAID)
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ONE)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ZERO)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, true, bankBook.getBill().get(0));
        assertEquals("11", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookFalse() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.TEN.add(BigDecimal.TEN))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.TEN)
                                        .status(BillStatus.PAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, false, bankBook.getBill().get(0));
        assertEquals("10", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookSecondFalse() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.TEN)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, false, bankBook.getBill().get(0));
        assertEquals("0", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookThirdFalse() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ONE)
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN.add(BigDecimal.ONE), false, bankBook.getBill().get(0));
        assertEquals("-10", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookTrue() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.TEN)
                                        .status(BillStatus.PAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN.add(BigDecimal.TEN), true, bankBook.getBill().get(0));
        assertEquals("10", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookSecondTrue() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN.add(BigDecimal.TEN)))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN.add(BigDecimal.ONE), true, bankBook.getBill().get(0));
        assertEquals("-9", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateBankBookThirdTrue() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN.add(BigDecimal.TEN)))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN.add(BigDecimal.TEN), true, bankBook.getBill().get(0));
        assertEquals("0", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateMoneyUsedToCashBox() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.TEN)
                                        .status(BillStatus.PAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(false)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ZERO)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, true, bankBook.getBill().get(0));
        assertEquals("0", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateMoneyUsedToCashBoxSecond() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.TEN)
                                        .status(BillStatus.PAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(false)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ZERO)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, true, null);
        assertEquals("0", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void testCalculateMoneyUsedToCashBoxThird() {
        BankBook bankBook = BankBook.builder()
                .id(1L)
                .number("01234-56789")
                .bankBookStatus(BankBookStatus.ACTIVE)
                .totalPrice(BigDecimal.ZERO.subtract(BigDecimal.TEN))
                .apartment(Apartment.builder()
                        .id(1L)
                        .number(1234)
                        .house(House.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .section(Section.builder()
                                .id(1L)
                                .name("Test")
                                .build())
                        .user(User.builder()
                                .id(1L)
                                .firstname("Test")
                                .surname("Test")
                                .lastname("Test")
                                .number("0123456789")
                                .build())
                        .build())
                .bill(
                        List.of(
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.TEN)
                                        .status(BillStatus.PAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build(),
                                Bill.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .rate(Rate.builder()
                                                .id(1L)
                                                .name("Test")
                                                .priceRateList(List.of(
                                                        PriceRate.builder()
                                                                .id(1L)
                                                                .price(BigDecimal.ZERO)
                                                                .service(Service.builder()
                                                                        .id(1L)
                                                                        .name("Test")
                                                                        .unit(Unit.builder()
                                                                                .id(1L)
                                                                                .name("Test")
                                                                                .build())
                                                                        .build())
                                                                .build()
                                                ))
                                                .build())
                                        .draft(true)
                                        .isActive(true)
                                        .totalPrice(BigDecimal.TEN)
                                        .payed(BigDecimal.ZERO)
                                        .status(BillStatus.UNPAID)
                                        .autoPayed(true)
                                        .payedCashBox(BigDecimal.ONE)
                                        .bankBook(BankBook.builder()
                                                .id(1L)
                                                .number("01234-56789")
                                                .bankBookStatus(BankBookStatus.ACTIVE)
                                                .totalPrice(BigDecimal.ONE)
                                                .apartment(Apartment.builder()
                                                        .id(1L)
                                                        .number(1234)
                                                        .house(House.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .section(Section.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .user(User.builder()
                                                                .id(1L)
                                                                .firstname("Test")
                                                                .surname("Test")
                                                                .lastname("Test")
                                                                .number("0123456789")
                                                                .build())
                                                        .build())
                                                .build())
                                        .periodOf(LocalDateTime.now())
                                        .periodTo(LocalDateTime.now())
                                        .serviceBillList(List.of(ServiceBill.builder()
                                                .id(1L)
                                                .count(123.4)
                                                .price(BigDecimal.ZERO)
                                                .totalPrice(BigDecimal.ZERO)
                                                .service(Service.builder()
                                                        .id(1L)
                                                        .name("Test")
                                                        .unit(Unit.builder()
                                                                .id(1L)
                                                                .name("Test")
                                                                .build())
                                                        .build())
                                                .build()))
                                        .build()
                        )
                )
                .cashBoxes(
                        List.of(
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(false)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.ONE)
                                        .moneyUsed(BigDecimal.ZERO)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build(),
                                CashBox.builder()
                                        .id(1L)
                                        .number("0123456789")
                                        .createAt(LocalDateTime.now())
                                        .draft(true)
                                        .isActive(true)
                                        .type(true)
                                        .price(BigDecimal.TEN)
                                        .moneyUsed(BigDecimal.ONE)
                                        .comment("")
                                        .articles(Article.builder()
                                                .id(1L)
                                                .type(ArticleType.INCOME)
                                                .name("Test")
                                                .build()
                                        )
                                        .staff(Staff.builder()
                                                .id(1L)
                                                .build()
                                        )
                                        .build()
                        )
                )
                .build();

        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(bankBook));

        bankBookService.calculateBankBook(1L, BigDecimal.TEN, false, bankBook.getBill().get(0));
        assertEquals("-20", bankBook.getTotalPrice().toString());
        verify(bankBookRepository, times(1)).save(any());
    }

    @Test
    void deleteBankBookById() {
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(BankBook.builder()
                .bankBookStatus(BankBookStatus.INACTIVE)
                .build()));
        bankBookService.deleteBankBookById(1L);
        verify(bankBookRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(1)).delete((BankBook) any());
    }

    @Test
    void deleteBankBookByIdHaveApartment() {
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(BankBook.builder()
                .apartment(Apartment.builder().build())
                .bankBookStatus(BankBookStatus.INACTIVE)
                .build()));
        assertThrows(IllegalArgumentException.class, () -> bankBookService.deleteBankBookById(1L));
        verify(bankBookRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(0)).delete((BankBook) any());
    }

    @Test
    void deleteBankBookByIdActiveError() {
        when(bankBookRepository.findById(anyLong())).thenReturn(Optional.of(BankBook.builder()
                .bankBookStatus(BankBookStatus.ACTIVE)
                .build()));
        assertThrows(IllegalArgumentException.class, () -> bankBookService.deleteBankBookById(1L));
        verify(bankBookRepository, times(1)).findById(anyLong());
        verify(bankBookRepository, times(0)).delete((BankBook) any());
    }

    @Test
    void count() {
        when(bankBookRepository.count()).thenReturn(1L);
        assertEquals(1L, bankBookService.count());
    }
}